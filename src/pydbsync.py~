#!/usr/bin/python
#
# main.py
# Copyright (C) peppelinux 2011 <peppelinux@yahoo.it>
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name ``peppelinux'' nor the name of any other
#    contributor may be used to endorse or promote products derived
#    from this software without specific prior written permission.
# 
# pyDBsync IS PROVIDED BY peppelinux ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL peppelinux OR ANY OTHER CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
#from sqlalchemy.ext.sqlsoup import SqlSoup
import re
from os import system
import datetime
from sqlalchemy import distinct

from master_tables import *
from slave_tables import *

"""
sqlautocode mysql://root:arturino@192.168.0.212/ultrabet -o master_tables.py
sqlautocode mysql://root:arturino@localhost/ultrabet -o slave_tables.py
"""

"""
db_master='mysql://root:arturino@192.168.0.212/ultrabet'
db_slave='mysql://root:arturino@localhost/ultrabet'
"""

class Connector:
	def __init__(self, db_type, db_conn):
		self.supported_type = ['master', 'slave']		
		if db_type in self.supported_type:
			self.type = db_type
		else: raise Exception( 'db_type not valid', 'supported type are: %s' % (','.join(self.supported_type)) )
		self.engine = create_engine(db_conn)
		self.session = sessionmaker(bind=self.engine)

				
	def save_and_clean_cache(self):
		self.engine.session.commit()
		self.engine.session.rollback()
	def rollback(self):
		self.engine.session.rollback()
		



		
		
